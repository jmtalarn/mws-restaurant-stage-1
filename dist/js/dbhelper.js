class DBHelper{static get DATABASE_URL(){return"http://localhost:1337/restaurants/"}static fetchRestaurants(t){fetch(DBHelper.DATABASE_URL).then(t=>{if(!t.ok)throw Error({code:t.status,message:t.statusText});return t.json()}).then(e=>t(null,e)).catch(e=>t(`Request failed. Returned status of ${e.code}. ${e.message}`,null))}static fetchRestaurantById(t,e){fetch(`${DBHelper.DATABASE_URL}${t}`).then(t=>{if(!t.ok)throw Error({code:t.status,message:t.statusText});return t.json()}).then(t=>e(null,t)).catch(t=>e(`Restaurant info doesn't exists. Returned status of ${t.code}. ${t.message}`,null))}static fetchRestaurantByCuisine(t,e){DBHelper.fetchRestaurants((s,a)=>{if(s)e(s,null);else{const s=a.filter(e=>e.cuisine_type==t);e(null,s)}})}static fetchRestaurantByNeighborhood(t,e){DBHelper.fetchRestaurants((s,a)=>{if(s)e(s,null);else{const s=a.filter(e=>e.neighborhood==t);e(null,s)}})}static fetchRestaurantByCuisineAndNeighborhood(t,e,s){DBHelper.fetchRestaurants((a,r)=>{if(a)s(a,null);else{let a=r;"all"!=t&&(a=a.filter(e=>e.cuisine_type==t)),"all"!=e&&(a=a.filter(t=>t.neighborhood==e)),s(null,a)}})}static fetchNeighborhoods(t){DBHelper.fetchRestaurants((e,s)=>{if(e)t(e,null);else{const e=s.map((t,e)=>s[e].neighborhood),a=e.filter((t,s)=>e.indexOf(t)==s);t(null,a)}})}static fetchCuisines(t){DBHelper.fetchRestaurants((e,s)=>{if(e)t(e,null);else{const e=s.map((t,e)=>s[e].cuisine_type),a=e.filter((t,s)=>e.indexOf(t)==s);t(null,a)}})}static urlForRestaurant(t){return`./restaurant.html?id=${t.id}`}static imageUrlForRestaurant(t){return t.photograph?`/img/${t.photograph}.webp`:"/img/Map_placeholder.svg"}static mapMarkerForRestaurant(t,e){return new google.maps.Marker({position:t.latlng,title:t.name,url:DBHelper.urlForRestaurant(t),map:e,animation:google.maps.Animation.DROP})}}
//# sourceMappingURL=../maps/js/dbhelper.js.map
